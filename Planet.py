class Planet:
    def __init__(self, name, size, resources):
        self.name = name
        self.size = size
        self.resources = resources  # Ressources disponibles
        self.initial_resources = resources.copy()  # Stockage des ressources de d√©part
        self.colonized = False
        self.regenerated = False

    def collect_resources(self, amount=None):
        """ Permet au joueur de collecter des ressources petit √† petit. """
        if not self.resources:
            print(f"{self.name} n'a plus de ressources disponibles.")
            return {}

        collected = {}

        for resource, quantity in self.resources.items():
            if amount:
                to_collect = min(amount, quantity)
                collected[resource] = to_collect
                self.resources[resource] -= to_collect
            else:
                collected[resource] = quantity
                self.resources[resource] = 0
        
        return collected

    def regenerate_resources(self):
        """
        R√©g√©n√®re progressivement les ressources jusqu'√† leur niveau initial.
        Affiche un message UNE SEULE FOIS quand la plan√®te est compl√®tement restaur√©e.
        """
        was_depleted = any(self.resources[res] < self.initial_resources[res] for res in self.initial_resources)

        for resource, max_value in self.initial_resources.items():
            if self.resources[resource] < max_value:
                self.resources[resource] += 5  # Ex: +5 unit√©s par cycle
                if self.resources[resource] > max_value:
                    self.resources[resource] = max_value  # Ne pas d√©passer la valeur initiale

        # ‚úÖ V√©rifier si la plan√®te a √©t√© exploit√©e avant d'annoncer sa r√©g√©n√©ration
        if was_depleted and self.resources == self.initial_resources and not self.regenerated:
            print(f"\nüåç‚ú® La plan√®te {self.name} a retrouv√© toutes ses ressources ! ‚ú®\n")
            self.regenerated = True  # ‚úÖ Marquer la plan√®te comme r√©g√©n√©r√©e

        # ‚úÖ R√©activer la r√©g√©n√©ration si on mine √† nouveau
        if was_depleted:
            self.regenerated = False  # Permet d'afficher √† nouveau le message si la plan√®te est min√©e
    
    def colonize(self):
        """ Colonise la plan√®te et augmente durablement ses ressources """
        if not self.colonized:
            for resource in self.resources:
                self.resources[resource] += 10  # ‚úÖ Augmente les ressources actuelles
                self.initial_resources[resource] += 10  # ‚úÖ Augmente aussi la limite de r√©g√©n√©ration

            self.colonized = True
            print(f"üåç {self.name} est colonis√©e ! Ressources augment√©es et la plan√®te pourra r√©g√©n√©rer davantage.")
            return True

        return False